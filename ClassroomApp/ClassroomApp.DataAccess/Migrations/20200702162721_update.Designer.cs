// <auto-generated />
using System;
using ClassroomApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassroomApp.DataAccess.Migrations
{
    [DbContext(typeof(ClassroomAppDbContext))]
    [Migration("20200702162721_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("classroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("teacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("classroomId");

                    b.HasIndex("teacherId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("groupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("groupId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Grading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("studentId");

                    b.ToTable("Gradings");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("teacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("teacherId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("classroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("teacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("classroomId");

                    b.HasIndex("teacherId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Confirmation")
                        .HasColumnType("bit");

                    b.Property<Guid?>("classroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("classroomId");

                    b.HasIndex("studentId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Assignment", b =>
                {
                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Classroom", "classroom")
                        .WithMany()
                        .HasForeignKey("classroomId");

                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Teacher", "teacher")
                        .WithMany()
                        .HasForeignKey("teacherId");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Classroom", b =>
                {
                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Group", "group")
                        .WithMany("Classrooms")
                        .HasForeignKey("groupId");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Grading", b =>
                {
                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Assignment", "Assignment")
                        .WithMany()
                        .HasForeignKey("AssignmentId");

                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Student", "student")
                        .WithMany()
                        .HasForeignKey("studentId");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Group", b =>
                {
                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Teacher", "teacher")
                        .WithMany()
                        .HasForeignKey("teacherId");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Message", b =>
                {
                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Classroom", "classroom")
                        .WithMany()
                        .HasForeignKey("classroomId");

                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Teacher", "teacher")
                        .WithMany()
                        .HasForeignKey("teacherId");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Request", b =>
                {
                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Classroom", "classroom")
                        .WithMany()
                        .HasForeignKey("classroomId");

                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Student", "student")
                        .WithMany()
                        .HasForeignKey("studentId");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Student", b =>
                {
                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Assignment", null)
                        .WithMany("Students")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Classroom", null)
                        .WithMany("Students")
                        .HasForeignKey("ClassroomId");
                });

            modelBuilder.Entity("ClassroomApp.ApplicationLogic.Data.Teacher", b =>
                {
                    b.HasOne("ClassroomApp.ApplicationLogic.Data.Classroom", null)
                        .WithMany("Teachers")
                        .HasForeignKey("ClassroomId");
                });
#pragma warning restore 612, 618
        }
    }
}
